// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	response "github.com/madeindra/toggl-test/internal/response"
)

// DeckUse is an autogenerated mock type for the DeckUse type
type DeckUse struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, isShuffled, cardsList
func (_m *DeckUse) Create(ctx context.Context, isShuffled bool, cardsList []string) response.ResultData {
	ret := _m.Called(ctx, isShuffled, cardsList)

	var r0 response.ResultData
	if rf, ok := ret.Get(0).(func(context.Context, bool, []string) response.ResultData); ok {
		r0 = rf(ctx, isShuffled, cardsList)
	} else {
		r0 = ret.Get(0).(response.ResultData)
	}

	return r0
}

// Draw provides a mock function with given fields: ctx, deckUUID, count
func (_m *DeckUse) Draw(ctx context.Context, deckUUID string, count int) response.ResultData {
	ret := _m.Called(ctx, deckUUID, count)

	var r0 response.ResultData
	if rf, ok := ret.Get(0).(func(context.Context, string, int) response.ResultData); ok {
		r0 = rf(ctx, deckUUID, count)
	} else {
		r0 = ret.Get(0).(response.ResultData)
	}

	return r0
}

// FindByID provides a mock function with given fields: ctx, deckUUID
func (_m *DeckUse) FindByID(ctx context.Context, deckUUID string) response.ResultData {
	ret := _m.Called(ctx, deckUUID)

	var r0 response.ResultData
	if rf, ok := ret.Get(0).(func(context.Context, string) response.ResultData); ok {
		r0 = rf(ctx, deckUUID)
	} else {
		r0 = ret.Get(0).(response.ResultData)
	}

	return r0
}
